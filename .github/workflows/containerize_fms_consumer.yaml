# SPDX-FileCopyrightText: 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Containerize FMS Consumer and Push to Container Registry

# Containerizes and pushes a build of the FMS Consumer to a container registry.
#

on:
  push:
    branches:
      - main
    # Pushing images based on PRs to the main repository should be prevented from
    # a security point of view.
    # Pushing images for PRs to ttl.sh might make some sense but for that we would need
    # to distinguish between the possible triggers. Until we do so, we therefore
    # disable the building and pushing of PR based images to GHCR.
    #pull_request:
    #  branches:
    #  - main
    paths:
      - "components/Dockerfile.fms-consumer"
      - "components/fms-consumer/src/**"
      - "components/fms-consumer/Cargo.toml"
      - "components/fms-proto/proto/**"
      - "components/fms-proto/src/**"
      - "components/fms-proto/Cargo.toml"
      - "components/influx-client/src/**"
      - "components/influx-client/Cargo.toml"
      - ".github/workflows/containerize_fms_consumer.yaml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/fms-consumer

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata and create tag
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: "components/."
          file: "components/Dockerfile.fms-consumer"
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
